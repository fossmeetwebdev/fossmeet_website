{"ast":null,"code":"var _jsxFileName = \"U:\\\\application\\\\src\\\\components\\\\RadioGroup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport React from \"react\";\nimport { Radio } from \"../Radio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RadioGroup = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    selectedValue,\n    orientation = \"horizontal\",\n    className,\n    name,\n    children,\n    onChange,\n    disabled,\n    errors = [],\n    ...restProps\n  } = _ref;\n  const [value, setValue] = React.useState(selectedValue);\n  React.useEffect(() => {\n    setValue(selectedValue);\n  }, [selectedValue]);\n\n  const handleChange = (event, val, isDisabled) => {\n    if (isDisabled) return;\n    setValue(val);\n    onChange && onChange(val, event);\n  };\n\n  const childrens = React.Children.map(children, child => {\n    if (child.type === Radio) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        value: child.props.value,\n        name,\n        checked: child.props.value === value,\n        onChange: e => handleChange(e, child.props.value, child.props.disabled),\n        orientation,\n        disabled: child.props.disabled\n      });\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: childrens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"2gtbgC0EzlpNFiX9pvweELD1FfU=\")), \"2gtbgC0EzlpNFiX9pvweELD1FfU=\");\n_c2 = RadioGroup;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RadioGroup$React.forwardRef\");\n$RefreshReg$(_c2, \"RadioGroup\");","map":{"version":3,"sources":["U:/application/src/components/RadioGroup/index.js"],"names":["ErrorMessage","React","Radio","RadioGroup","forwardRef","ref","selectedValue","orientation","className","name","children","onChange","disabled","errors","restProps","value","setValue","useState","useEffect","handleChange","event","val","isDisabled","childrens","Children","map","child","type","cloneElement","props","checked","e"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,yBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,UAAtB;;;AAEA,OAAO,MAAMC,UAAU,iCAAGF,KAAK,CAACG,UAAN,SACxB,OAYEC,GAZF,KAaK;AAAA;;AAAA,MAZH;AACEC,IAAAA,aADF;AAEEC,IAAAA,WAAW,GAAG,YAFhB;AAGEC,IAAAA,SAHF;AAIEC,IAAAA,IAJF;AAKEC,IAAAA,QALF;AAMEC,IAAAA,QANF;AAOEC,IAAAA,QAPF;AAQEC,IAAAA,MAAM,GAAG,EARX;AASE,OAAGC;AATL,GAYG;AACH,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACgB,QAAN,CAAeX,aAAf,CAA1B;AAEAL,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBF,IAAAA,QAAQ,CAACV,aAAD,CAAR;AACD,GAFD,EAEG,CAACA,aAAD,CAFH;;AAIA,QAAMa,YAAY,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,UAAb,KAA4B;AAC/C,QAAIA,UAAJ,EAAgB;AAChBN,IAAAA,QAAQ,CAACK,GAAD,CAAR;AACAV,IAAAA,QAAQ,IAAIA,QAAQ,CAACU,GAAD,EAAMD,KAAN,CAApB;AACD,GAJD;;AAMA,QAAMG,SAAS,GAAGtB,KAAK,CAACuB,QAAN,CAAeC,GAAf,CAAmBf,QAAnB,EAA8BgB,KAAD,IAAW;AACxD,QAAIA,KAAK,CAACC,IAAN,KAAezB,KAAnB,EAA0B;AACxB,0BAAOD,KAAK,CAAC2B,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BX,QAAAA,KAAK,EAAEW,KAAK,CAACG,KAAN,CAAYd,KADY;AAE/BN,QAAAA,IAF+B;AAG/BqB,QAAAA,OAAO,EAAEJ,KAAK,CAACG,KAAN,CAAYd,KAAZ,KAAsBA,KAHA;AAI/BJ,QAAAA,QAAQ,EAAGoB,CAAD,IACRZ,YAAY,CAACY,CAAD,EAAIL,KAAK,CAACG,KAAN,CAAYd,KAAhB,EAAuBW,KAAK,CAACG,KAAN,CAAYjB,QAAnC,CALiB;AAM/BL,QAAAA,WAN+B;AAO/BK,QAAAA,QAAQ,EAAEc,KAAK,CAACG,KAAN,CAAYjB;AAPS,OAA1B,CAAP;AASD;;AACD,WAAOc,KAAP;AACD,GAbiB,CAAlB;AAeA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAElB,SAAhB;AAAA,gBAA4Be;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEV;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAhDuB,kCAAH,iCAAhB;MAAMV,U","sourcesContent":["import { ErrorMessage } from \"components/ErrorMessage\";\nimport React from \"react\";\nimport { Radio } from \"../Radio\";\n\nexport const RadioGroup = React.forwardRef(\n  (\n    {\n      selectedValue,\n      orientation = \"horizontal\",\n      className,\n      name,\n      children,\n      onChange,\n      disabled,\n      errors = [],\n      ...restProps\n    },\n    ref\n  ) => {\n    const [value, setValue] = React.useState(selectedValue);\n\n    React.useEffect(() => {\n      setValue(selectedValue);\n    }, [selectedValue]);\n\n    const handleChange = (event, val, isDisabled) => {\n      if (isDisabled) return;\n      setValue(val);\n      onChange && onChange(val, event);\n    };\n\n    const childrens = React.Children.map(children, (child) => {\n      if (child.type === Radio) {\n        return React.cloneElement(child, {\n          value: child.props.value,\n          name,\n          checked: child.props.value === value,\n          onChange: (e) =>\n            handleChange(e, child.props.value, child.props.disabled),\n          orientation,\n          disabled: child.props.disabled,\n        });\n      }\n      return child;\n    });\n\n    return (\n      <>\n        <div className={className}>{childrens}</div>\n        <ErrorMessage errors={errors} />\n      </>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}