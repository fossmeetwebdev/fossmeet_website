{"ast":null,"code":"var _jsxFileName = \"U:\\\\application\\\\src\\\\components\\\\SelectBox\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage } from \"components/ErrorMessage\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst selectOptions = [{\n  value: \"option1\",\n  label: \"Option1\"\n}, {\n  value: \"option2\",\n  label: \"Option2\"\n}, {\n  value: \"option3\",\n  label: \"Option3\"\n}];\nexport const SelectBox = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    children,\n    placeholder = \"Select\",\n    className,\n    options = selectOptions,\n    isSearchable = false,\n    placeholderClassName = \"\",\n    isMulti = false,\n    onChange,\n    value,\n    errors = [],\n    indicator,\n    ...restProps\n  } = _ref;\n  const [selectedVal, setSelectedVal] = React.useState(value);\n\n  const handleChange = data => {\n    setSelectedVal(data);\n\n    if (isMulti) {\n      onChange === null || onChange === void 0 ? void 0 : onChange((data === null || data === void 0 ? void 0 : data.map(d => d.value)) || []);\n    } else {\n      onChange === null || onChange === void 0 ? void 0 : onChange(data === null || data === void 0 ? void 0 : data.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      ref: ref,\n      options: options,\n      className: `${className} common-select`,\n      placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: placeholderClassName,\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this),\n      isSearchable: isSearchable,\n      isMulti: isMulti,\n      components: {\n        IndicatorSeparator: () => null,\n        ...(indicator && {\n          DropdownIndicator: () => indicator\n        })\n      },\n      value: selectedVal,\n      onChange: handleChange,\n      styles: {\n        control: provided => ({ ...provided,\n          backgroundColor: \"transparent\",\n          border: \"0 !important\",\n          boxShadow: \"0 !important\",\n          minHeight: \"auto\",\n          \"&:hover\": {\n            border: \"0 !important\"\n          }\n        }),\n        option: provided => ({ ...provided,\n          color: \"#000\"\n        }),\n        singleValue: provided => ({ ...provided,\n          color: \"inherit\"\n        }),\n        input: provided => ({ ...provided,\n          color: \"inherit\",\n          margin: \"0\",\n          padding: \"0\" // height: \"0\",\n\n        }),\n        valueContainer: provided => ({ ...provided,\n          padding: \"0\"\n        }),\n        dropdownIndicator: provided => ({ ...provided,\n          paddingTop: \"0px\",\n          paddingBottom: \"0px\"\n        }),\n        clearIndicator: provided => ({ ...provided,\n          padding: \"0\"\n        }),\n        multiValue: provided => ({ ...provided,\n          margin: \"0\"\n        }),\n        multiValueLabel: provided => ({ ...provided,\n          padding: \"0\"\n        }),\n        menuPortal: base => ({ ...base,\n          zIndex: 999999\n        })\n      },\n      menuPortalTarget: document.body,\n      closeMenuOnScroll: event => {\n        return event.target.id === \"scrollContainer\";\n      },\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true);\n}, \"pD1sa3IGNX7ZwyrJwVAQ2y6+iE0=\")), \"pD1sa3IGNX7ZwyrJwVAQ2y6+iE0=\");\n_c2 = SelectBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectBox$React.forwardRef\");\n$RefreshReg$(_c2, \"SelectBox\");","map":{"version":3,"sources":["U:/application/src/components/SelectBox/index.js"],"names":["ErrorMessage","React","Select","selectOptions","value","label","SelectBox","forwardRef","ref","children","placeholder","className","options","isSearchable","placeholderClassName","isMulti","onChange","errors","indicator","restProps","selectedVal","setSelectedVal","useState","handleChange","data","map","d","IndicatorSeparator","DropdownIndicator","control","provided","backgroundColor","border","boxShadow","minHeight","option","color","singleValue","input","margin","padding","valueContainer","dropdownIndicator","paddingTop","paddingBottom","clearIndicator","multiValue","multiValueLabel","menuPortal","base","zIndex","document","body","event","target","id"],"mappings":"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","sourcesContent":["import { ErrorMessage } from \"components/ErrorMessage\";\nimport React from \"react\";\nimport Select from \"react-select\";\n\nconst selectOptions = [\n  { value: \"option1\", label: \"Option1\" },\n  { value: \"option2\", label: \"Option2\" },\n  { value: \"option3\", label: \"Option3\" },\n];\n\nexport const SelectBox = React.forwardRef(\n  (\n    {\n      children,\n      placeholder = \"Select\",\n      className,\n      options = selectOptions,\n      isSearchable = false,\n      placeholderClassName = \"\",\n      isMulti = false,\n      onChange,\n      value,\n      errors = [],\n      indicator,\n      ...restProps\n    },\n    ref\n  ) => {\n    const [selectedVal, setSelectedVal] = React.useState(value);\n\n    const handleChange = (data) => {\n      setSelectedVal(data);\n      if (isMulti) {\n        onChange?.(data?.map((d) => d.value) || []);\n      } else {\n        onChange?.(data?.value);\n      }\n    };\n    return (\n      <>\n        <Select\n          ref={ref}\n          options={options}\n          className={`${className} common-select`}\n          placeholder={\n            <div className={placeholderClassName}>{placeholder}</div>\n          }\n          isSearchable={isSearchable}\n          isMulti={isMulti}\n          components={{\n            IndicatorSeparator: () => null,\n            ...(indicator && { DropdownIndicator: () => indicator }),\n          }}\n          value={selectedVal}\n          onChange={handleChange}\n          styles={{\n            control: (provided) => ({\n              ...provided,\n              backgroundColor: \"transparent\",\n              border: \"0 !important\",\n              boxShadow: \"0 !important\",\n              minHeight: \"auto\",\n              \"&:hover\": {\n                border: \"0 !important\",\n              },\n            }),\n            option: (provided) => ({\n              ...provided,\n              color: \"#000\",\n            }),\n            singleValue: (provided) => ({\n              ...provided,\n              color: \"inherit\",\n            }),\n            input: (provided) => ({\n              ...provided,\n              color: \"inherit\",\n              margin: \"0\",\n              padding: \"0\",\n              // height: \"0\",\n            }),\n            valueContainer: (provided) => ({\n              ...provided,\n              padding: \"0\",\n            }),\n            dropdownIndicator: (provided) => ({\n              ...provided,\n              paddingTop: \"0px\",\n              paddingBottom: \"0px\",\n            }),\n            clearIndicator: (provided) => ({\n              ...provided,\n              padding: \"0\",\n            }),\n            multiValue: (provided) => ({\n              ...provided,\n              margin: \"0\",\n            }),\n            multiValueLabel: (provided) => ({\n              ...provided,\n              padding: \"0\",\n            }),\n            menuPortal: (base) => ({ ...base, zIndex: 999999 }),\n          }}\n          menuPortalTarget={document.body}\n          closeMenuOnScroll={(event) => {\n            return event.target.id === \"scrollContainer\";\n          }}\n          {...restProps}\n        />\n        <ErrorMessage errors={errors} />\n        {children}\n      </>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}